{"singlePage": ["link", "about"], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark_colorblind", "urlMode": "pinyin", "script": "", "style": "", "indexScript": "", "indexStyle": "", "bottomText": "\u2764\ufe0f \u8f6c\u8f7d\u6587\u7ae0\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u8c22\u8c22\uff01\u2764\ufe0f", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "title": "\u4e00\u53ea\u535a\u5ba2", "displayTitle": "\u4e00\u53ea\u535a\u5ba2", "subTitle": "\u7528\u6811\u6728\u53bb\u63a5\u8fd1\u661f\u8fb0\u662f\u5927\u5730\u7684\u68a6\u60f3\u3002", "homeUrl": "https://fluent12138.github.io/", "avatarUrl": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "faviconUrl": "https://cdn.acwing.com/media/article/image/2024/03/10/36510_f0cb6536de-Blog.png", "email": "fluent12138@163.com", "GMEEK_VERSION": "main", "postListJson": {"P5": {"htmlDir": "docs/post/erlang--bing-fa-ying-yong-she-ji-zhi-ti-xing-qi.html", "labels": ["done"], "postTitle": "erlang-\u5e76\u53d1\u5e94\u7528\u8bbe\u8ba1\u4e4b\u63d0\u9192\u5668", "postUrl": "post/erlang--bing-fa-ying-yong-she-ji-zhi-ti-xing-qi.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/5", "commentNum": 0, "wordCount": 1784, "description": "# [Erlang\u5e76\u53d1\u5e94\u7528\u8bbe\u8ba1\u4e4b\u63d0\u9192\u5668](https://git.acwing.com/fluentx/erlang-reminder/-/tree/main/) \r\n\r\n\r\n\r\n> \u4e3b\u8981\u6587\u4ef6\u4e3a: evserv.erl(\u4e8b\u4ef6\u670d\u52a1\u5668)\u3001event.erl(\u4e8b\u4ef6\u8fdb\u7a0b)\u3001test.erl(\u6d4b\u8bd5\uff0c\u6a21\u62df\u5ba2\u6237\u7aef)\u3001sup.erl(\u91cd\u542f\u5668)\r\n\r\n## \u7406\u89e3\u95ee\u9898\r\n\u4e3a\u4e86\u7f16\u5199\u8fd9\u4e2a\u5c0f\u5e94\u7528\uff0c \u9700\u8981\u505a\u7684\u4e8b\u60c5\r\n\r\n- \u6dfb\u52a0\u4e00\u4e2a\u4e8b\u4ef6\uff0c \u5305\u62ec\u4e8b\u4ef6\u540d\uff0c\u4e8b\u4ef6\u63cf\u8ff0\u4fe1\u606f\uff0c\u6700\u540e\u671f\u9650\r\n- \u5f53\u4e8b\u4ef6\u5230\u8fbe\u7ea6\u5b9a\u671f\u9650\uff0c \u53d1\u51fa\u8b66\u544a\r\n- \u6839\u636e\u4e8b\u4ef6\u540d\u5b57\u53d6\u6d88\u4e8b\u4ef6\r\n- \u901a\u8fc7\u547d\u4ee4\u884c\u6216\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\r\n\r\n\r\n\r\n> \u6b64\u5e94\u7528\u6ca1\u6709\u505a\u4fe1\u606f\u6301\u4e45\u5316\uff0c \u901a\u8fc7Erlang\u6570\u636e\u7ed3\u6784\u5728\u8fd0\u884c\u65f6\u5b58\u50a8\u4fe1\u606f\r\n\r\n \r\n  **\u7a0b\u5e8f\u7ed3\u6784\u5982\u4e0b** \r\n![reminder-client-server.png](https://cdn.acwing.com/media/article/image/2023/03/26/36510_7e46851ecb-reminder-client-server.png) \r\n\r\n### server(\u4ee5\u4e0b\u7edf\u79f0\u4e8b\u4ef6\u670d\u52a1\u5668)\u9700\u8981\u505a\u7684\u4efb\u52a1\r\n- \u63a5\u6536\u5ba2\u6237\u7aef\u7684\u8ba2\u9605\r\n- \u628a\u6765\u81ea\u4e8b\u4ef6\u670d\u52a1\u5668\u7684\u6d88\u606f\u8f6c\u53d1\u7ed9\u6bcf\u4e2a\u8ba2\u9605\u8005\r\n- \u63a5\u6536\u589e\u52a0\u4e8b\u4ef6\u7684\u6d88\u606f(\u9700\u8981\u65f6\u4f1a\u542f\u52a8x, y, z\u8fdb\u7a0b)\r\n- \u63a5\u6536\u53d6\u6d88\u4e8b\u4ef6\u6d88\u606f, \u968f\u540e\u6740\u6b7b\u4e8b\u4ef6\u8fdb\u7a0b\r\n\r\n### \u5ba2\u6237\u8fdb\u7a0b\u4efb\u52a1\r\n- \u5411\u4e8b\u4ef6\u670d\u52a1\u5668\u53d1\u8d77\u8ba2\u9605, \u5e76\u63a5\u53d7\u901a\u77e5\u4fe1\u606f\r\n- \u8bf7\u6c42\u670d\u52a1\u5668\u589e\u52a0\u4e00\u4e2a\u5177\u4f53\u7684\u4e8b\u4ef6\r\n- \u8bf7\u6c42\u670d\u52a1\u5668\u53d6\u6d88\u4e00\u4e2a\u4e8b\u4ef6\r\n- \u76d1\u63a7\u670d\u52a1\u5668\r\n- \u5728\u9700\u8981\u65f6, \u5173\u95ed\u4e8b\u4ef6\u670d\u52a1\u5668\r\n\r\n### \u8fdb\u7a0bx,y,z\u9700\u8981\u505a\u7684\u4efb\u52a1\r\n- \u5f53\u8ba1\u65f6\u5668\u5230\u65f6, \u7ed9\u4e8b\u4ef6\u670d\u52a1\u5668\u8fdb\u7a0b\u53d1\u9001\u4e00\u6761\u4fe1\u606f\r\n- \u63a5\u6536\u4e8b\u4ef6\u53d6\u6d88\u6d88\u606f, \u7136\u540e\u6b7b\u4ea1\r\n\r\n![\u9aa8\u67b6.png](https://cdn.acwing.com/media/article/image/2023/03/26/36510_89eed0aacb-\u9aa8\u67b6.png)\r\n\r\n\r\n> \u5728\u771f\u5b9e\u7684\u5e94\u7528\u4e2d\uff0c\u628a\u6bcf\u4e2a\u5f85\u63d0\u9192\u7684\u4e8b\u4ef6\u90fd\u8868\u793a\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u505a\u6cd5\u53ef\u80fd\u6709\u4e9b\u8fc7\u5ea6\u4e86\uff0c\u5e76\u4e14\u96be\u4ee5\r\n\u6269\u5c55\u5230\u5927\u91cf\u4e8b\u4ef6\u7684\u573a\u5408\u3002", "top": 0, "createdAt": 1679839200, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2023-03-26", "dateLabelColor": "#A333D0"}, "P4": {"htmlDir": "docs/post/erlang-gen_fsm -you-xi-jiao-yi.html", "labels": ["done"], "postTitle": "erlang-gen_fsm \u6e38\u620f\u4ea4\u6613", "postUrl": "post/erlang-gen_fsm%20-you-xi-jiao-yi.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/4", "commentNum": 0, "wordCount": 10059, "description": "![fsm-\u6e38\u620f\u4ea4\u6613.excalidraw.png](https://cdn.acwing.com/media/article/image/2023/04/04/36510_86007705d2-fsm-\u6e38\u620f\u4ea4\u6613.excalidraw.png)\r\n\r\n **code** \r\n \r\n```\r\n%%%-------------------------------------------------------------------\r\n%%% @author \u52d2\u52d2\r\n%%% @copyright (C) 2023, <COMPANY>\r\n%%% @doc\r\n%%%\r\n%%% @end\r\n%%% Created : 31. 3\u6708 2023 14:38\r\n%%%-------------------------------------------------------------------\r\n-module(trade_fsm).\r\n-author('\u52d2\u52d2').\r\n-behavior(gen_fsm).\r\n-record(state, {name = '', other, ownitems = [], otheritems = [], monitor, from}). % from\u5c31\u662fgen_fsm\u4e2d\u53d1\u9001\u6d88\u606f\u5904\r\n%% \u516c\u5171API\r\n-export([start/1, start_link/1, trade/2, accept_trade/1, make_offer/2, retract_offer/2, ready/1, cancel/1]).\r\n%% gen_sfm\u56de\u8c03\u51fd\u6570\r\n-export([init/1, handle_event/3, handle_sync_event/4, handle_info/3, terminate/3, code_change/4,\r\n        % \u5b9a\u5236\u7684\u72b6\u6001\u540d\r\n        idle/2, idle/3, idle_wait/2, idle_wait/3, negotiate/2, negotiate/3, wait/2, ready/2, ready/3\r\n        ]).\r\n\r\n%%% \u516c\u5171API\r\nstart(Name) -> gen_fsm:start(?MODULE, [Name], []).\r\n\r\nstart_link(Name) -> gen_fsm:start_link(?MODULE, [Name], []).\r\n\r\n%% \u8bf7\u6c42\u5f00\u59cb\u4ea4\u6613\u8c08\u8bdd. \u5f53/\u5982\u679c\u5bf9\u65b9\u63a5\u6536\u65f6\u8fd4\u56de\r\ntrade(OwnPid, OtherPid) ->\r\n  gen_fsm:sync_send_event(OwnPid, {negotiate, OtherPid}, 30000).\r\n\r\n%% \u63a5\u6536\u67d0\u4e2a\u73a9\u5bb6\u7684\u4ea4\u6613\u8bf7\u6c42\r\naccept_trade(OwnPid) ->\r\n  gen_fsm:sync_send_event(OwnPid, accept_negotiate).\r\n\r\n%% \u4ece\u7269\u54c1\u5217\u8868\u4e2d\u9009\u62e9\u4e00\u4e2a\u8fdb\u884c\u4ea4\u6613\r\nmake_offer(OwnPid, Item) ->\r\n  gen_fsm:send_event(OwnPid, {make_offer, Item}).\r\n\r\n%% \u64a4\u9500\u67d0\u4e2a\u4ea4\u6613\u7269\u54c1\r\nretract_offer(OwnPid, Item) ->\r\n  gen_fsm:send_event(OwnPid, {retract_offer, Item}).\r\n\r\n%% \u5ba3\u5e03\u81ea\u5df1\u5c31\u7eea. \u5f53\u5bf9\u65b9\u4e5f\u5ba3\u5e03\u81ea\u5df1\u5c31\u7eea\u4e86, \u4ea4\u6613\u5c31\u5b8c\u6210\u4e86.\r\nready(OwnPid) ->\r\n  gen_fsm:sync_send_event(OwnPid, ready, infinity).\r\n\r\n%% \u53d6\u6d88\u4ea4\u6613\r\ncancel(OwnPid) ->\r\n  gen_fsm:sync_send_all_state_event(OwnPid, cancel).\r\n\r\n%%% FSM \u5230 FSM\r\n\r\n%% \u5411\u53e6\u4e00\u4e2aFSM\u53d1\u9001\u4ea4\u6613\u4f1a\u8bdd\u8bf7\u6c42\r\nask_negotiate(OwnPid, OtherPid) ->\r\n  gen_fsm:send_event(OtherPid, {ask_negotiate, OwnPid}).\r\n\r\n%% \u8f6c\u53d1\u73a9\u5bb6\u4ea4\u6613\u63a5\u6536\u8bf7\u6c42\r\naccept_negotiate(OtherPid, OwnPid) ->\r\n  gen_fsm:send_event(OtherPid, {accept_negotiate, OwnPid}).\r\n\r\n%% \u8f6c\u53d1\u73a9\u5bb6\u7684\u4ea4\u6613\u7269\u54c1\u63d0\u4f9b\u4fe1\u606f\r\ndo_offer(OtherPid, Item) ->\r\n  gen_fsm:send_event(OtherPid, {do_offer, Item}).\r\n\r\n%% \u8f6c\u53d1\u73a9\u5bb6\u4ea4\u6613\u7269\u54c1\u64a4\u9500\u8bf7\u6c42\r\nundo_offer(OtherPid, Item) ->\r\n  gen_fsm:send_event(OtherPid, {undo_offer, Item}).\r\n\r\n%% \u8be2\u95ee\u5bf9\u65b9\u662f\u5426\u5c31\u7eea\r\nare_you_ready(OtherPid) ->\r\n  gen_fsm:send_event(OtherPid, are_you_ready).\r\n\r\n%% \u56de\u590d\u672a\u5c31\u7eea -> \u4e0d\u5728wait\u72b6\u6001\u54e6\r\nnot_yet(OtherPid) ->\r\n  gen_fsm:send_event(OtherPid, not_yet).\r\n\r\n%% \u901a\u77e5\u5bf9\u65b9\u73a9\u5bb6\u5f53\u524d\u5904\u4e8e\u7b49\u5f85\u8fdb\u5165ready\u72b6\u6001\r\n%% \u72b6\u6001\u4f1a\u8fc1\u79fb\u5230ready ?\r\nam_ready(OtherPid) ->\r\n  gen_fsm:send_event(OtherPid, 'ready!').\r\n\r\n%% \u786e\u8ba4fsm\u5904\u4e8eready\u72b6\u6001\r\nack_trans(OtherPid) ->\r\n  gen_fsm:send_event(OtherPid, ack).\r\n\r\n%% \u8be2\u95ee\u662f\u5426\u53ef\u4ee5\u63d0\u4ea4\r\nask_commit(OtherPid) ->\r\n  gen_fsm:sync_send_event(OtherPid, ask_commit).\r\n\r\n%% \u5f00\u59cb\u540c\u6b65\u63d0\u4ea4\r\ndo_commit(OtherPid) ->\r\n  gen_fsm:sync_send_event(OtherPid, do_commit).\r\n\r\n%% \u793c\u8c8c\u53d6\u6d88\r\nnotify_cancel(OtherPid) ->\r\n  gen_fsm:send_all_state_event(OtherPid, cancel).\r\n\r\ninit(Name) ->\r\n  {ok, idle, #state{name = Name}}.\r\n\r\n%% \u7ed9\u73a9\u5bb6\u53d1\u9001\u4e00\u6761\u901a\u77e5, \u53ef\u4ee5\u662f\u4e00\u6761\u53d1\u7ed9\u73a9\u5bb6\u8fdb\u7a0b\u7684\u6d88\u606f\r\n%% \u6253\u5370\u5728\u63a7\u5236\u53f0\u5c31ok\u4e86\r\nnotice(#state{name = N}, Str, Args) ->\r\n  io:format('~s : '++ Str ++ '~n', [N | Args]).\r\n\r\n%% \u8bb0\u5f55\u975e\u671f\u671b\u7684\u6d88\u606f\r\nunexpected(Msg, State) ->\r\n  io:format('~p receive unknown event ~p while in state ~p', [self(), Msg, State]).\r\n\r\n%%% idle \u8bf7\u6c42/\u63a5\u6536 \u4ea4\u6613\r\n%% \u5f02\u6b65\u7248\u672c, \u5173\u5fc3\u5176\u4ed6\u73a9\u5bb6\u7684\u4ea4\u6613\u8bf7\u6c42\r\nidle({ask_negotiate, OtherPid}, S = #state{}) ->\r\n  Ref = monitor(process, OtherPid),\r\n  notice(S, '~p asked for a trade negotiation', [OtherPid]),\r\n  {next_state, idle_wait, S#state{other = OtherPid, monitor = Ref}};\r\n\r\nidle(Event, Data) ->\r\n  unexpected(Event, idle),\r\n  {next_state, idle, Data}.\r\n\r\n%% \u540c\u6b65\u7248\u672c, \u672c\u65b9\u73a9\u5bb6\u8bf7\u6c42\u53e6\u4e00\u4e2a\u73a9\u5bb6\u8fdb\u884c\u4ea4\u6613\r\nidle({negotiate, OtherPid}, From, S=#state{}) ->\r\n  ask_negotiate(OtherPid, self()),\r\n  notice(S, 'asking user ~p for a trade', [OtherPid]),\r\n  Ref = monitor(process, OtherPid),\r\n  {next_state, idle_wait, S = #state{other = OtherPid, monitor = Ref, from = From}};\r\n\r\nidle(Event, _From, Data) ->\r\n  unexpected(Event, idle),\r\n  {next_state, idle, Data}.\r\n\r\n%%% idle_wait\r\n%% \u63a5\u6536\u65b9, 1.\u540c\u610f\u534f\u5546 2.\u5728\u6211\u4eec\u53d1\u9001\u4ea4\u6613\u8bf7\u6c42\u65f6, \u4ed6\u4e5f\u53d1\u8d77\u4e86\u4ea4\u6613\r\nidle_wait({ask_negotiate, OtherPid}, S = #state{other = OtherPid}) ->\r\n  gen_fsm:reply(S#state.from, ok), % \u901a\u77e5\u73a9\u5bb6\u4e00\u5207\u6b63\u5e38\r\n  notice(S, 'starting negotiation', []),\r\n  {next_state, negotiate, S};\r\n\r\n%% \u5bf9\u65b9\u63a5\u53d7\u4e86\u6211\u4eec\u7684\u8bf7\u6c42, \u8fc1\u79fbnegotiate\u72b6\u6001\r\nidle_wait({accept_negotiate, OtherPid}, S = #state{other = OtherPid}) ->\r\n  gen_fsm:reply(S#state.from, ok), % \u901a\u77e5\u73a9\u5bb6\u4e00\u5207\u6b63\u5e38\r\n  notice(S, 'starting negotiation', []),\r\n  {next_state, negotiate, S};\r\n\r\nidle_wait(Event, Data) ->\r\n  unexpected(Event, idle_wait),\r\n  {next_state, idle_wait, Data}.\r\n\r\n%% \u53d1\u9001\u65b9, \u63a5\u6536\u5bf9\u65b9\u73a9\u5bb6\u8bf7\u6c42\r\nidle_wait(accept_negotiate, _From, S = #state{other = OtherPid}) ->\r\n  accept_negotiate(OtherPid, self()),\r\n  notice(S, 'accepting negotiation', []),\r\n  {reply, ok, negotiate, S};\r\n\r\nidle_wait(Event, _From, Data) ->\r\n  unexpected(Event, idle_wait),\r\n  {next_state, idle_wait, Data}.\r\n\r\n%% \u5411\u7269\u54c1\u5217\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7269\u54c1\r\nadd(Item, Items) ->\r\n  [Item|Items].\r\n\r\n%% \u4ece\u7269\u54c1\u5217\u8868\u4e2d\u5220\u9664\u4e00\u4e2a\u7269\u54c1\r\nremove(Item, Items) ->\r\n  Items -- [Item].\r\n\r\n%%% negotiate\r\n%% \u672c\u65b9\u63d0\u4f9b\u7269\u54c1\r\nnegotiate({make_offer, Item}, S = #state{ownitems = OwnItems}) ->\r\n  do_offer(S#state.other, Item),\r\n  notice(S, 'offering ~p', [Item]),\r\n  {next_state, negotiate, S#state{ownitems = add(Item, OwnItems)}};\r\n\r\n%% \u672c\u65b9\u64a4\u9500\u7269\u54c1\r\nnegotiate({retract_offer, Item}, S = #state{ownitems = OwnItems}) ->\r\n  undo_offer(S#state.other, Item),\r\n  notice(S, 'cancelling offer on ~p', [Item]),\r\n  {next_state, negotiate, S#state{ownitems = remove(Item, OwnItems)}};\r\n\r\n%% \u5bf9\u65b9\u63d0\u4f9b\u7269\u54c1\r\nnegotiate({do_offer, Item}, S = #state{otheritems = OtherItems}) ->\r\n  notice(S, 'other player offering ~p', [Item]),\r\n  {next_state, negotiate, S#state{otheritems = add(Item, OtherItems)}};\r\n\r\n%% \u5bf9\u65b9\u64a4\u9500\u7269\u54c1\r\nnegotiate({undo_offer, Item}, S = #state{otheritems = OtherItems}) ->\r\n  notice(S, 'other player cancelling offer on ~p', [Item]),\r\n  {next_state, negotiate, S#state{otheritems = OtherItems}};\r\n\r\n%% \u5f53\u5728negotiate\u72b6\u6001\u65f6, \u63a5\u6536\u5230\u5bf9\u65b9\u7684ready\u4fe1\u53f7, \u76f4\u63a5\u62d2\u7edd.\r\nnegotiate(are_you_ready, S = #state{other = OtherPid}) ->\r\n  io:format('Other user ready to trade ~n'),\r\n  notice(S, 'Other user ready to transfer goods : ~n You get ~p, The Other side gets ~p', [S#state.otheritems, S#state.ownitems]),\r\n  not_yet(OtherPid),\r\n  {next_state, negotiate, S};\r\n\r\nnegotiate(Event, Data) ->\r\n  unexpected(Event, negotiate),\r\n  {next_state, negotiate, Data}.\r\n\r\n%% \u73a9\u5bb6\u505a\u5b8c\u51b3\u7b56 -> \u53d1\u9001ready\r\nnegotiate(ready, From, S = #state{other = OtherPid}) ->\r\n  are_you_ready(OtherPid),\r\n  notice(S, 'asking if ready, waiting', []),\r\n  {next_state, wait, S = #state{from = From}};\r\n\r\nnegotiate(Event, _From, S) ->\r\n  unexpected(Event, negotiate),\r\n  {next_state, negotiate, S}.\r\n\r\n%%% wait\r\n\r\n%% \u5f53\u5bf9\u65b9\u64a4\u9500/\u63d0\u4f9b\u7269\u54c1\u4e86, \u56de\u9000\u5230negotiate\u72b6\u6001\r\nwait({do_offer, Item}, S = #state{otheritems = OtherItems}) ->\r\n  gen_fsm:reply(S#state.from, offer_changed), % \u901a\u77e5negotiate\u72b6\u6001\r\n  notice(S, 'other side offering ~p', [Item]),\r\n  {next_state, negotiate, S#state{otheritems = add(Item, OtherItems)}};\r\n\r\nwait({undo_offer, Item}, S = #state{otheritems = OtherItems}) ->\r\n  gen_fsm:reply(S#state.from, offer_changed), % \u901a\u77e5negotiate\u72b6\u6001\r\n  notice(S, 'other side cancelling offer of ~p', [Item]),\r\n  {next_state, negotiate, S#state{otheritems = remove(Item, OtherItems)}};\r\n\r\n%% \u5bf9\u65b9\u8be2\u95ee\u672c\u65b9\u662f\u5426ready\r\nwait(are_you_ready, S = #state{}) ->\r\n  am_ready(S#state.other),\r\n  notice(S, 'asked if ready, and I am. Waiting for same reply', []),\r\n  {next_state, wait, S};\r\n\r\n%% \u5bf9\u65b9\u4e0d\u540c\u610f\r\nwait(not_yet, S = #state{}) ->\r\n  notice(S, 'Other not ready yet', []),\r\n  {next_state, wait, S};\r\n\r\n%% \u6536\u5230ready!\r\nwait('ready!', S = #state{}) ->\r\n  am_ready(S#state.other),\r\n  ack_trans(S#state.other),\r\n  gen_fsm:reply(#state.from, ok),\r\n  notice(S, 'other side is ready. Moving to ready state', []),\r\n  {next_state, ready, S};\r\n\r\n%% \u4e0d\u671f\u5f85\u7684\u6d88\u606f\r\nwait(Event, Data) ->\r\n  unexpected(Event, wait),\r\n  {next_state, wait, Data}.\r\n\r\n%%% ready, \u9009\u62e9\u4e00\u4e2aFSM\u53bb\u5b8c\u6210ready, erlang\u4e2d\u8fdb\u7a0b\u662f\u6392\u597d\u5e8f\u7684, \u53ef\u4ee5\u6bd4\u8f83\u5927\u5c0f\r\npriority(OwnPid, OtherPid) when OwnPid > OtherPid -> true;\r\npriority(OwnPid, OtherPid) when OtherPid > OwnPid -> false.\r\n\r\nready(ack, S = #state{}) ->\r\n  case priority(self(), S#state.other) of\r\n      true ->\r\n        try\r\n          notice(S, 'asking for commit', []),\r\n          ready_commit = ask_commit(S#state.other),\r\n          notice(S, 'ordering commit', []),\r\n          ok = do_commit(S#state.other),\r\n          commit(S),\r\n          {stop, normal, S}\r\n        catch Class:Reason ->\r\n          %% \u9000\u51fa!, ready_commit\u6216do_commit\u5931\u8d25\u4e86\r\n          notice(S, 'commit failed', []),\r\n          {stop, {Class, Reason}, S}\r\n        end;\r\n      false ->\r\n        {next_state, ready, S}\r\n  end;\r\n\r\nready(Event, Data) ->\r\n  unexpected(Event, ready),\r\n  {next_state, ready, Data}.\r\n\r\nready(ask_commit, _From, S) ->\r\n  notice(S, 'replying to ask_commit', []),\r\n  {reply, ready_commit, ready, S};\r\n\r\nready(do_commit, _From, S) ->\r\n  notice(S, 'commiting...', []),\r\n  commit(S),\r\n  {stop, normal, ok, S};\r\n\r\nready(Event, _From, S) ->\r\n  unexpected(Event, ready),\r\n  {next_state, ready, S}.\r\n\r\ncommit(S = #state{}) ->\r\n  io:format('Transaction completed for ~s.', [S#state.name]),\r\n  io:format('Items send are: ~n ~p ~n received are: ~n ~p ~n', [S#state.ownitems, S#state.otheritems]),\r\n  io:format('The operation should have some atomic save in a database').\r\n\r\n%% \u5bf9\u65b9\u73a9\u5bb6\u53d6\u6d88\u4ea4\u6613\r\n%% \u505c\u6b62\u6b63\u518d\u505a\u7684\u5de5\u4f5c \u7ec8\u6b62\u8fdb\u7a0b\r\nhandle_event(cancel, _StateName, S = #state{}) ->\r\n  notice(S, 'received cancel event', []),\r\n  {stop, other_cancelled, S};\r\n\r\nhandle_event(Event, StateName, Data) ->\r\n  unexpected(Event, StateName),\r\n  {next_state, StateName, Data}.\r\n\r\n%% \u672c\u65b9\u73a9\u5bb6\u7ec8\u6b62\u4ea4\u6613, \u5fc5\u987b\u901a\u77e5\u5bf9\u65b9\u73a9\u5bb6\u6211\u4eec\u9000\u51fa\u4e86\r\nhandle_sync_event(cancel, _From, _StateName, S = #state{}) ->\r\n  notify_cancel(S#state.other),\r\n  notice(S, 'cancelling trade, sending cancel event', []),\r\n  {stop, cancelled, ok, S};\r\n\r\nhandle_sync_event(Event, _From, StateName, Data) ->\r\n  unexpected(Event, StateName),\r\n  {next_state, StateName, Data}.\r\n\r\n%% \u5904\u7406\u5bf9\u65b9FSM\u5d29\u6e83\u4e8b\u4ef6\r\nhandle_info({'DOWN', Ref, process, Pid, Reason}, _, S = #state{other = Pid, monitor=Ref}) ->\r\n  notice(S, 'Other side dead', []),\r\n  {stop, {other_down, Reason}, S};\r\n\r\nhandle_info(Info, StateName, Data) ->\r\n  unexpected(Info, StateName),\r\n  {next_state, StateName, Data}.\r\n\r\ncode_change(_OldVsn, StateName, Data, _Extra) ->\r\n  {ok, StateName, Data}.\r\n\r\nterminate(_Reason, _StateName, _StateData) -> ok.\r\n```\r\n<!-- ##{'timestamp':1680616800}## -->\u3002", "top": 0, "createdAt": 1680616800, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2023-04-04", "dateLabelColor": "#A333D0"}, "P6": {"htmlDir": "docs/post/erlang-gen_event-shi-jian-chu-li-qi.html", "labels": ["done"], "postTitle": "erlang-gen_event\u4e8b\u4ef6\u5904\u7406\u5668", "postUrl": "post/erlang-gen_event-shi-jian-chu-li-qi.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/6", "commentNum": 0, "wordCount": 4499, "description": "# \u4e8b\u4ef6\u5904\u7406\u5668\r\n\r\n## \u56fe\u89e3\r\n![event-\u4e8b\u4ef6\u5904\u7406\u5668.excalidraw.png](https://cdn.acwing.com/media/article/image/2023/04/05/36510_f828b03cd3-event-\u4e8b\u4ef6\u5904\u7406\u5668.excalidraw.png) \r\n\r\n## version 2.0\r\n```\r\n-module(curling).\r\n-author('\u52d2\u52d2').\r\n%% API\r\n-export([start_link/2, add_points/3, next_round/1, join_feed/2, leave_feed/2, game_info/1]).\r\n\r\nstart_link(TeamA, TeamB) ->\r\n  {ok, Pid} = gen_event:start_link(),\r\n  %% \u8bb0\u5206\u677f\r\n  gen_event:add_handler(Pid, curling_scoreboard, []),\r\n  %% \u542f\u52a8\u6bd4\u8d5b\u72b6\u6001\u7d2f\u52a0\u5668\r\n  gen_event:add_handler(Pid, curling_accumulator, []),\r\n  set_teams(Pid, TeamA, TeamB),\r\n  {ok, Pid}.\r\n\r\nset_teams(Pid, TeamA, TeamB) ->\r\n  gen_event:notify(Pid, {set_teams, TeamA, TeamB}).\r\n\r\nadd_points(Pid, Team, N) ->\r\n  gen_event:notify(Pid, {add_points, Team, N}).\r\n\r\nnext_round(Pid) -> gen_event:notify(Pid, next_round).\r\n\r\n%% \u4e3a\u8fdb\u7a0bToPid\u8ba2\u9605\u6bd4\u8d5b\u6d88\u606f\r\njoin_feed(Pid, ToPid) ->\r\n  HandlerId = {curling_feed, make_ref()},\r\n  gen_event:add_handler(Pid, HandlerId, [ToPid]),\r\n  HandlerId.\r\n\r\nleave_feed(Pid, HandlerId) ->\r\n  gen_event:delete_handler(Pid, HandlerId, leave_feed).\r\n\r\n%% \u8fd4\u56de\u5f53\u524d\u6bd4\u8d5b\u72b6\u6001, \u4e3a\u8fdf\u5230\u8ba2\u9605\u7684\u63d0\u4f9b\r\ngame_info(Pid) ->\r\n  gen_event:call(Pid, curling_accumulator, game_data).\r\n```\r\n\r\n## callback\r\n- \u901a\u7528callback\r\n```\r\n-module(gen_event_callback).\r\n-author('\u52d2\u52d2').\r\n-behavior(gen_event).\r\n%% API\r\n-export([init/1, handle_event/2, handle_call/2, handle_info/2, code_change/3, terminate/2]).\r\n\r\ninit([]) -> [].\r\n\r\nhandle_event(_, State) -> {ok, State}.\r\n\r\nhandle_call(_, State) -> {ok, ok, State}.\r\n\r\nhandle_info(_, State) -> {ok, State}.\r\n\r\ncode_change(_OldVsn, State, _Extra) -> {ok, State}.\r\n\r\nterminate(_Reason, _State) -> ok.\r\n```\r\n\r\n- curling_scoreboard\r\n```\r\n-module(curling_scoreboard).\r\n-author('\u52d2\u52d2').\r\n-import(curling_scoreboard_hw, [set_teams/2, add_point/1, reset_board/1, next_round/0]).\r\n%% API\r\n-export([init/1, handle_event/2, handle_call/2, handle_info/2]).\r\n\r\ninit([]) -> {ok, []}.\r\n\r\nhandle_event({set_teams, TeamA, TeamB}, State) ->\r\n  io:format('set teams'),\r\n  curling_scoreboard_hw:set_teams(TeamA, TeamB),\r\n  {ok, State};\r\n\r\nhandle_event({add_points, Team, N}, State) ->\r\n  [curling_scoreboard_hw:add_point(Team) || _ <- lists:seq(1, N)],\r\n  {ok, State};\r\n\r\nhandle_event(next_round, State) ->\r\n  curling_scoreboard_hw:next_round(),\r\n  {ok, State};\r\n\r\nhandle_event(_, State) -> {ok, State}.\r\n\r\nhandle_call(_, State) -> {ok, ok, State}.\r\n\r\nhandle_info(_, State) -> {ok, State}.\r\n\r\n```\r\n- curling_feed\r\n```\r\n-module(curling_feed).\r\n-author('\u52d2\u52d2').\r\n-behavior(gen_event).\r\n%% API\r\n-export([init/1, handle_event/2, handle_call/2, handle_info/2, code_change/3, terminate/2]).\r\n\r\ninit([Pid]) -> {ok, Pid}.\r\n\r\nhandle_event(Event, Pid) ->\r\n  Pid ! {curling_feed, Event},\r\n  {ok, Pid}.\r\n\r\nhandle_call(_, State) -> {ok, ok, State}.\r\n\r\nhandle_info(_, State) -> {ok, State}.\r\n\r\ncode_change(_OldVsn, State, _Extra) -> {ok, State}.\r\n\r\nterminate(_Reason, _State) -> ok.\r\n\r\n```\r\n- curling_accumulator\r\n\r\n```\r\n-module(curling_accumulator).\r\n-author('\u52d2\u52d2').\r\n-behavior(gen_event).\r\n%% API\r\n-export([init/1, handle_event/2, handle_call/2, handle_info/2, code_change/3, terminate/2]).\r\n-record(state, {teams = orddict:new(), round = 0}).\r\n\r\ninit([]) -> {ok, #state{}}.\r\n\r\nhandle_event({set_teams, TeamA, TeamB}, S = #state{teams = T}) ->\r\n  Teams = orddict:store(TeamA, 0, orddict:store(TeamB, 0, T)),\r\n  {ok, S#state{teams =  Teams}};\r\n\r\nhandle_event({add_points, Team, N}, S = #state{teams = T}) ->\r\n  Teams = orddict:update_counter(Team, N, T), %% \u5982\u679c\u5b58\u5728\u5219 Val += incr, \u4e0d\u5b58\u5728\u6dfb\u52a0\u4e00\u4e2aKey Val(\u4e3a\u7a7a\u76f4\u63a5\u6dfb\u52a0, \u5426\u5219\u4f9d\u6b21\u5bfb\u627e)\r\n  {ok, S#state{teams = Teams}};\r\n\r\nhandle_event(next_round, S = #state{}) ->\r\n  {ok, S#state{round = S#state.round + 1}};\r\n\r\nhandle_event(_Event, State = #state{}) -> {ok, State}.\r\n\r\nhandle_call(game_data, S = #state{teams = T, round = R}) ->\r\n  {ok, {orddict:to_list(T), {round, R}}, S};\r\n\r\nhandle_call(_, State) -> {ok, ok, State}.\r\n\r\nhandle_info(_, State) -> {ok, State}.\r\n\r\ncode_change(_OldVsn, State, _Extra) -> {ok, State}.\r\n\r\nterminate(_Reason, _State) -> ok.\r\n```\r\n\r\n## mock curling_scoreboard_hw\r\n```\r\n-module(curling_scoreboard_hw).\r\n-author('\u52d2\u52d2').\r\n\r\n%% API\r\n-export([set_teams/2, next_round/0, add_point/1, reset_board/0]).\r\n\r\n%% \u5728\u8ba1\u5206\u677f\u4e0a\u663e\u793a\u53c2\u8d5b\u961f\u4f0d\r\nset_teams(TeamA, TeamB) ->\r\n  io:format('Scoreboard: Team ~s vs Team ~s ~n', [TeamA, TeamB]).\r\n\r\nnext_round() ->\r\n  io:format('Scoreboard: round over ~n').\r\n\r\nadd_point(Team) ->\r\n  io:format('Scoreboard:increased score of team ~s by 1~n', [Team]).\r\n\r\nreset_board() ->\r\n  io:format('Scoreboard: All teams are undefined and al1 scores are 0~n').\r\n\r\n```\r\n\r\n<!-- ##{'timestamp':1680703200}## -->\u3002", "top": 0, "createdAt": 1680703200, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2023-04-05", "dateLabelColor": "#A333D0"}, "P7": {"htmlDir": "docs/post/erlang-OTP-jin-cheng-chi.html", "labels": ["done"], "postTitle": "erlang-OTP\u8fdb\u7a0b\u6c60", "postUrl": "post/erlang-OTP-jin-cheng-chi.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/7", "commentNum": 0, "wordCount": 9792, "description": "# OTP\u5e94\u7528 - \u8fdb\u7a0b\u6c60\r\n## \u67b6\u6784\u56fe - \u76d1\u7763\u6811\r\n\r\n![ppool\u67b6\u6784\u56fe.excalidraw.png](https://cdn.acwing.com/media/article/image/2023/04/08/36510_68e5fc62d6-ppool\u67b6\u6784\u56fe.excalidraw.png) \r\n\r\n## \u76d1\u7763\u8005\u5b9e\u73b0\r\n\r\n### ppool_supersup\u6d41\u7a0b\u56fe\u89e3\r\n![ppool_supersup\u903b\u8f91.excalidraw.png](https://cdn.acwing.com/media/article/image/2023/04/09/36510_f521f702d6-ppool_supersup\u903b\u8f91.excalidraw.png) \r\n\r\n### code\r\n\r\n```erlang\r\n-module(ppool_supersup).  \r\n-author('\u52d2\u52d2').  \r\n-behavior(supervisor).  \r\n%% API  \r\n-export([start_link/0, stop/0, start_pool/3, stop_pool/1]).  \r\n-export([init/1]).  \r\n   \r\nstart_link() ->  \r\n  io:format('start supersup ...~n'),  \r\n  supervisor:start_link({local, ppool}, ?MODULE, []). %{local, Name} \u547d\u540d  \r\n  \r\nstop() ->  \r\n  case whereis(ppool) of  \r\n    P when is_pid(P) ->  \r\n      exit(P, kill);  \r\n    _ -> ok  \r\n  end.  \r\n  \r\ninit([]) ->  \r\n  MaxRestart = 6,  \r\n  MaxTime = 3000,  \r\n  {ok, {{one_for_one, MaxRestart, MaxTime}, []}}.  \r\n  \r\n%% Limit : \u5de5\u4f5c\u8005\u8fdb\u7a0b\u4e2a\u6570; MFA\u5143\u7ec4 : \u5de5\u4f5c\u8005\u8fdb\u7a0b\u76d1\u7763\u8005\u542f\u52a8\u5de5\u4f5c\u8005\u8fdb\u7a0b\u9700\u8981\u7684{M, F, A}\u5143\u7ec4  \r\nstart_pool(Name, Limit, MFA) ->  \r\n  io:format('start pool ... args: {~p, ~p, ~p}~n', [Name, Limit, MFA]),  \r\n  ChildSpec = {Name,  \r\n               {ppool_sup, start_link, [Name, Limit, MFA]}, % {M, F, A}  \r\n               permanent, 10500, supervisor, [ppool_sup]  \r\n              },  \r\n  supervisor:start_child(ppool, ChildSpec).  \r\n  \r\nstop_pool(Name) ->  \r\n  supervisor:terminate_child(ppool, Name),  \r\n  supervisor:delete_child(ppool, Name).\r\n```\r\n### ppool_sup\u6d41\u7a0b\r\n`start_link -> (supervisor) -> init(\u521d\u59cb\u5316\u4fe1\u606f, \u9700\u8981\u5f00\u542fserv)`\r\n### code\r\n```erlang\r\n-module(ppool_sup).  \r\n-author('\u52d2\u52d2').  \r\n-behavior(supervisor).  \r\n%% API  \r\n-export([start_link/3, init/1]).  \r\n  \r\nstart_link(Name, Limit, MFA) ->  \r\n  io:format('start ppool_sup...~n'),  \r\n  supervisor:start_link(?MODULE, {Name, Limit, MFA}).  \r\n  \r\ninit({Name, Limit, MFA}) ->  \r\n  io:format('init ppool_sup...~n'),  \r\n  MaxRestart = 1,  \r\n  MaxTime = 3600,  \r\n  {ok, {{one_for_all, MaxRestart, MaxTime},  \r\n        [{serv,  \r\n          {ppool_serv, start_link, [Name, Limit, self(), MFA]}, % {M, F, A}  \r\n          permanent, 5000, worker, [ppool_serv]  \r\n        }]  \r\n       }}.\r\n```\r\n### ppool_worker_sup\u6d41\u7a0b\r\n`start_link -> (supervisor) -> init(\u521d\u59cb\u5316\u4fe1\u606f, \u4f7f\u7528simpler_one_for_one)`\r\ncode\r\n```erlang\r\n-module(ppool_worker_sup).  \r\n-author('\u52d2\u52d2').  \r\n-behavior(supervisor).  \r\n%% API  \r\n-export([start_link/1, init/1]).  \r\n  \r\nstart_link(MFA = {_, _, _}) ->  \r\n  supervisor:start_link(?MODULE, MFA).  \r\n  \r\ninit({M, F, A}) ->  \r\n  io:format('worker sup init...~n'),  \r\n  \r\n  io:format('MFA : ~p ~n', [{M, F, A}]),  \r\n  MaxRestart = 5,  \r\n  MaxTime = 3600,  \r\n  {ok, {{simple_one_for_one, MaxRestart, MaxTime},  \r\n        [{  \r\n          ppool_worker, {M, F, A},  \r\n          temporary, 5000, worker, [M]  \r\n        }]  \r\n    }}.\r\n```\r\n## \u8fdb\u7a0b\u6c60\u670d\u52a1\u5668\r\n\r\n### ppool_serv\u6d41\u7a0b\u56fe\r\n![ppool_serv\u903b\u8f91.excalidraw.png](https://cdn.acwing.com/media/article/image/2023/04/08/36510_81a1a095d6-ppool_serv\u903b\u8f91.excalidraw.png) \r\n### code\r\n```erlang\r\n-module(ppool_serv).  \r\n-author('\u52d2\u52d2').  \r\n-behavior(gen_server).  \r\n-define(SPEC(MFA), {worker_sup,  \r\n                    {ppool_worker_sup, start_link, [MFA]},  \r\n                    permanent, 10000, supervisor, [ppool_worker_sup]  \r\n                   }).  \r\n-record(state, {limit = 0, sup, refs, queue = queue:new()}). % refs\u4e3a\u76d1\u63a7\u5668\u7684\u5f15\u7528  \r\n%% API  \r\n-export([start/4, start_link/4, run/2, sync_queue/2, async_queue/2, stop/1]).  \r\n-export([init/1, handle_info/2, handle_call/3, handle_cast/2, code_change/3, terminate/2]).  \r\n  \r\nstart(Name, Limit, Sup, MFA) when is_atom(Name), is_integer(Limit) ->  \r\n  gen_server:start({local, Name}, ?MODULE, {Limit, MFA, Sup}, []).  \r\n  \r\nstart_link(Name, Limit, Sup, MFA) when is_atom(Name), is_integer(Limit) ->  \r\n  io:format('start ppool_serv ~p ... ~n ', [Name]),  \r\n  gen_server:start_link({local, Name}, ?MODULE, {Limit, MFA, Sup}, []).  \r\n  \r\nrun(Name, Args) ->  \r\n  io:format('test start run ~n'),  \r\n  gen_server:call(Name, {run, Args}).  \r\n  \r\nsync_queue(Name, Args) ->  \r\n  gen_server:call(Name, {sync, Args}, infinity).  \r\n  \r\nasync_queue(Name, Args) ->  \r\n  gen_server:cast(Name, {async, Args}).  \r\n  \r\nstop(Name) ->  \r\n  gen_server:call(Name, stop).  \r\n  \r\ninit({Limit, MFA, Sup}) ->  \r\n  %% \u6ce8\u91ca\u90e8\u5206\u4f1a\u9020\u6210\u6b7b\u9501!  \r\n  %% \u5728ppool_sup\u4e2d\u9700\u8981\u542f\u52a8serv, \u7b49\u5f85init\u4fe1\u606f\u8fd4\u56de, \u800cinit\u4e2d\u4f7f\u7528start_child\u9700\u8981\u7b49\u5f85ppool_sup\u8fd4\u56de  \r\n  %% {ok, Pid} = supervisor:start_child(Sup, ?SPEC(MFA)),  \r\n  io:format('init ppool_serv...~n'),  \r\n  self() ! {start_worker_supervisor, Sup, MFA},  \r\n  {ok, #state{limit = Limit, refs = gb_sets:empty()}}.  \r\n  \r\n%% \u83b7\u53d6\u4efb\u52a1\u7ed3\u675f\u4fe1\u606f  \r\nhandle_info({'DOWN', Ref, process, _Pid,  _}, S = #state{refs = Refs}) ->  \r\n  io:format('received down msg, bool : ~p ~n', [gb_sets:is_element(Ref, Refs)]),  \r\n  case gb_sets:is_element(Ref, Refs) of  \r\n    true -> handle_down_worker(Ref, S);  \r\n    false -> {noreply, S}  \r\n  end;  \r\n  \r\nhandle_info({start_worker_supervisor, Sup, MFA}, S = #state{}) ->  \r\n  io:format('start worker...~n'),  \r\n  {ok, Pid} = supervisor:start_child(Sup, ?SPEC(MFA)),  \r\n  io:format('start worker pid : ~p ~n', [Pid]),  \r\n  {noreply, S#state{sup = Pid}};  \r\n  \r\nhandle_info(Msg, State) ->  \r\n  io:format('UnKnown msg : ~p ~n', [Msg]),  \r\n  {noreply, State}.  \r\n  \r\n%% \u5904\u7406\u7ed3\u675f\u4efb\u52a1  \r\nhandle_down_worker(Ref, S = #state{limit = L, sup = Sup, refs = Refs}) ->  \r\n  case queue:out(S#state.queue) of  \r\n    {{value, {From, Args}}, Q} -> % \u5904\u7406\u540c\u6b65  \r\n      {ok, Pid} = supervisor:start_child(Sup, Args),  \r\n      NewRef = erlang:monitor(process, Pid),  \r\n      NewRefs = gb_sets:insert(NewRef, gb_sets:delete(Ref, Refs)), %\u4e3a\u4ec0\u4e48\u662finsert \u800c\u4e0d\u662fadd  \r\n      gen_server:reply(From, {ok, Pid}),  \r\n      {noreply, S#state{refs = NewRefs, queue = Q}};  \r\n    {{value, Args}, Q} -> % \u5904\u7406\u5f02\u6b65  \r\n      {ok, Pid} = supervisor:start_child(Sup, Args),  \r\n      NewRef = erlang:monitor(process, Pid),  \r\n      NewRefs = gb_sets:insert(NewRef, gb_sets:delete(Ref, Refs)),  \r\n      {noreply, S#state{refs = NewRefs, queue = Q}};  \r\n    {empty, _} ->  \r\n      {noreply, S#state{limit = L + 1, refs = gb_sets:delete(Ref, Refs)}}  \r\n  end.  \r\n  \r\n%% run  \r\nhandle_call({run, Args}, _From, S = #state{limit = N, sup = Sup, refs = R}) when N > 0 ->  \r\n  io:format('args : ~p, limit : ~p, sup : ~p, refs : ~p ~n', [Args, N, Sup, R]),  \r\n  {ok, Pid} = supervisor:start_child(Sup, Args),  \r\n  Ref = erlang:monitor(process, Pid),  \r\n  {reply, {ok, Pid}, S#state{limit = N - 1, refs = gb_sets:add(Ref, R)}};  \r\n  \r\nhandle_call({run, _Args}, _From, S = #state{limit = N}) when N =< 0 ->  \r\n  {reply, noalloc, S};  \r\n  \r\n%% sync_queue  \r\nhandle_call({sync, Args}, _From, S = #state{limit = N, sup = Sup, refs = R}) when N > 0 ->  \r\n  {ok, Pid} = supervisor:start_child(Sup, Args),  \r\n  Ref = erlang:monitor(process, Pid),  \r\n  {reply, {ok, Pid}, S#state{limit = N - 1, refs = gb_sets:add(Ref, R)}};  \r\n  \r\nhandle_call({sync, Args}, From, S = #state{queue = Q}) ->  \r\n  {noreply, S#state{queue = queue:in({From, Args}, Q)}};  \r\n  \r\n%% stop & \u672a\u77e5\u6d88\u606f  \r\nhandle_call(stop, _From, State) -> {stop, normal, ok, State};  \r\n  \r\nhandle_call(_Msg, _From, State) -> {noreply, State}.  \r\n  \r\n%% async_queue  \r\nhandle_cast({async, Args}, S = #state{limit = N, sup = Sup, refs =  R}) when N > 0 ->  \r\n  {ok, Pid} = supervisor:start_child(Sup, Args),  \r\n  Ref = erlang:monitor(process, Pid),  \r\n  {noreply, S#state{limit = N - 1, refs = gb_sets:add(Ref, R)}};  \r\n  \r\nhandle_cast({async, Args}, S = #state{limit = N, queue = Q}) when N =< 0 ->  \r\n  {noreply, S#state{queue = queue:in(Args, Q)}};  \r\n  \r\nhandle_cast(_Msg, State) -> {noreply, State}.  \r\n  \r\ncode_change(_OldVsn, State, _Extra) -> {ok, State}.  \r\n  \r\nterminate(_Reason, _State) -> ok.\r\n```\r\n\r\n## \u5de5\u4f5c\u8005\r\n### \u903b\u8f91\r\n`\u4e3b\u8981\u662f\u901a\u8fc7\u8d85\u65f6\u4e8b\u4ef6\u5b9a\u65f6\u53d1\u9001\u6d88\u606f`\r\n### code\r\n```erlang\r\n-module(ppool_nagger).  \r\n-author('\u52d2\u52d2').  \r\n-behavior(gen_server).  \r\n  \r\n%% API  \r\n-export([start_link/4, stop/1]).  \r\n-export([init/1, handle_call/3, handle_cast/2, handle_info/2, code_change/3, terminate/2]).  \r\n  \r\nstart_link(Task, Delay, Max, SendTo) ->  \r\n  gen_server:start_link(?MODULE, {Task, Delay, Max, SendTo}, []).  \r\n  \r\nstop(Pid) -> gen_server:call(Pid, stop).  \r\n  \r\ninit({Task, Delay, Max, SendTo}) ->  \r\n  {ok, {Task, Delay, Max, SendTo}, Delay}.  \r\n  \r\n%%% otp\u56de\u8c03\u51fd\u6570  \r\nhandle_call(stop, normal, State) ->  \r\n  {stop, normal, ok, State};  \r\n  \r\nhandle_call(_Msg, _From, State) -> {noreply, State}.  \r\n  \r\nhandle_cast(_Msg, State) -> {noreply, State}.  \r\n  \r\n%% \u901a\u8fc7\u8d85\u65f6\u7684\u65b9\u5f0f\u53d1\u9001\u6d88\u606f  \r\nhandle_info(timeout, {Task, Delay, Max, SendTo}) ->  \r\n  SendTo ! {self(), Task},  \r\n  io:format('send task : ~p ~n', [Task]),  \r\n  if Max =:= infinity ->  \r\n       {noreply, {Task, Delay, Max, SendTo}, Delay};  \r\n     Max =< 1 ->  \r\n       {stop, normal, {Task, Delay, 0, SendTo}};  \r\n     Max > 1 ->  \r\n       {noreply, {Task, Delay, Max - 1, SendTo}, Delay}  \r\n  end.  \r\n  \r\ncode_change(_OldVsn, State, _Extra) -> {ok, State}.  \r\n  \r\nterminate(_Reason, _State) -> ok.\r\n```\r\n\r\n## [\u4fee\u6539\u4e3aOTP\u5e94\u7528](https://git.acwing.com/fluentx/ppool/-/tree/main/) \r\n\r\n\r\n## \u8fd0\u884c\u8fdb\u7a0b\u6c60\r\n\r\n```erlang\r\nerl -make \r\n\r\nerl -pa ebin/\r\n\r\nmake:all([load]).\r\n\r\napplication:start(ppool).\r\n\r\nppool:start_pool(nagger, 2, {ppool_nagger, start_link, []}).\r\n\r\n%% \u540c\u6b65\u4e0d\u5165\u961f\r\nppool:run(nagger, ['finish the chapter!', 1000, 5, self()]).\r\nppool:run(nagger, ['Watch a good movie!', 1000, 5, self()]).\r\nppool:run(nagger, ['Playing game!', 1000, 5, self()]).\r\nflush().\r\n\r\n%% \u540c\u6b65\u5165\u961f\r\nppool:sync_queue(nagger, ['finish the chapter!', 1000, 5, self()]).  \r\nppool:sync_queue(nagger, ['Watch a good movie!', 1000, 5, self()]).\r\nppool:sync_queue(nagger, ['Playing game!', 1000, 5, self()]).\r\n\r\n%% \u5f02\u6b65\u5165\u961f\r\nppool:async_queue(nagger, ['finish the chapter!', 1000, 5, self()]).  \r\nppool:async_queue(nagger, ['Watch a good movie!', 1000, 5, self()]).\r\nppool:async_queue(nagger, ['Playing game!', 1000, 5, self()]).\r\n\r\n%% \u67e5\u770b\u5f53\u524d\u8fd0\u884c\u7684\u5e94\u7528\r\napplication:which_applications().\r\n\r\napplication:stop(ppool).\r\n```\r\n\r\n<!-- ##{'timestamp':1680962400}## -->\u3002", "top": 0, "createdAt": 1680962400, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2023-04-08", "dateLabelColor": "#A333D0"}, "P3": {"htmlDir": "docs/post/7-tian-yong-Go-cong-ling-shi-xian-Web-kuang-jia-Gee.html", "labels": ["doing"], "postTitle": "7\u5929\u7528Go\u4ece\u96f6\u5b9e\u73b0Web\u6846\u67b6Gee", "postUrl": "post/7-tian-yong-Go-cong-ling-shi-xian-Web-kuang-jia-Gee.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/3", "commentNum": 0, "wordCount": 2135, "description": "## \u51c6\u5907\u9636\u6bb5\r\n- \u73af\u5883\u642d\u5efa, \u642d\u4e86\u4e24\u4efd\r\n    - \u4f7f\u7528wsl2 ubuntu\u955c\u50cf, \u76f4\u63a5\u547d\u4ee4\u884c\u5b89\u88c5, \u560e\u560e\u5feb\r\n    - windows\u672c\u673a\u5b89\u88c5go,  [\u53c2\u8003\u94fe\u63a5](https://blog.csdn.net/qq_34902437/article/details/120699775) \r\n- ide\r\n    - \u719f\u6089\u8bed\u6cd5\u9636\u6bb5: `vim` (y\u603b\u914d\u7f6e\u560e\u560e\u597d\u7528)\r\n    - \u6b63\u5f0f\u7f16\u5199\u9636\u6bb5: `idea 2021`\r\n- \u7248\u672c\u63a7\u5236: `git`\r\n\r\n## day1\r\n- \u4ee3\u7801\u91cf: `50\u884c`\r\n- \u4e3b\u8981\u5185\u5bb9\r\n    - \u4e86\u89e3go\u4e2dhttp\u6a21\u5757\u7684\u4f5c\u7528\r\n    - \u81ea\u5b9a\u4e49\u8def\u7531 + \u56de\u8c03\u65b9\u6cd5\r\n    - \u6846\u67b6\u7ed3\u6784\u5b9a\u4e49\r\n\r\n**\u6846\u67b6\u57fa\u672c\u7ed3\u6784**\r\n```go\r\n// \u6587\u4ef6\u7ed3\u6784\r\n.\r\n\u251c\u2500\u2500 base1\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.go\r\n\u251c\u2500\u2500 base2\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 main.go\r\n\u2514\u2500\u2500 base3\r\n    \u251c\u2500\u2500 fgee\r\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 fgee.go\r\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 go.mod\r\n    \u251c\u2500\u2500 go.mod\r\n    \u2514\u2500\u2500 main.go\r\n\r\n// \u53ea\u6709\u4e00\u4e2a\u8def\u7531\u5bf9\u5e94\u7684map\r\n// \u6bd4\u5982\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8def\u7531\u4e3a '/hello', \u56de\u8c03\u65b9\u6cd5\u4e3ahelloFunc, \u5c31\u4f1a\u5b58\u5728\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d {'/hello' : helloFunc}\r\n// \u5f53\u8bf7\u6c42\u4e86\u8fd9\u4e2a\u8def\u5f84, \u901a\u8fc7\u8def\u5f84\u627e\u5230\u5bf9\u5e94\u65b9\u6cd5, \u7136\u540e\u6267\u884c\r\n\r\ntype Engine struct {\r\n\trouter map[string]HandlerFunc\r\n}\r\n```\r\n\r\n## day2\r\n\r\n- \u603b\u4ee3\u7801\u91cf:\u7ea6`140\u884c`, \u65b0\u589e`90\u884c`\r\n- \u4e3b\u8981\u5185\u5bb9\r\n    - \u5c01\u88c5\u6570\u636e\r\n        - \u5b9a\u4e49\u4e0a\u4e0b\u6587\u5c01\u88c5\u8bf7\u6c42\u8fc7\u7a0b\u9700\u8981\u7684\u6570\u636e\r\n        - \u5c01\u88c5\u8def\u7531\u4e3a\u5355\u72ec\u4e00\u4e2a\u6a21\u5757, `router.go`\r\n    - \u5b9a\u4e49\u901a\u7528\u65b9\u6cd5: \u4f8b\u5982\u54cd\u5e94HTML\u9875\u9762, \u54cd\u5e94\u5b57\u7b26\u4e32, \u54cd\u5e94json\u6570\u636e\r\n\r\n**\u6846\u67b6\u57fa\u672c\u7ed3\u6784**\r\n\r\n```go\r\n// \u6587\u4ef6\u7ed3\u6784\r\n.\r\n\u251c\u2500\u2500 fgee\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 context.go\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 fgee.go\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 go.mod\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 router.go\r\n\u251c\u2500\u2500 go.mod\r\n\u2514\u2500\u2500 main.go\r\n\r\n// fgee.go\u6587\u4ef6\r\n\r\ntype Engine struct {\r\n\trouter *router // \u7531\u4e4b\u524d\u7684map\u5c01\u88c5\u4e3a\u7ed3\u6784\u4f53\r\n}\r\n\r\n// context.go\u6587\u4ef6\r\n// Context \u4e0a\u4e0b\u6587\u7ed3\u6784\r\n// \u5728ServeHTTP\u65b9\u6cd5\u4e2d\u88ab\u521b\u5efa\r\n\r\ntype Context struct {\r\n\t// \u8bf7\u6c42\u4e0e\u54cd\u5e94\r\n\tReq    *http.Request\r\n\tWriter http.ResponseWriter\r\n\t// \u8bf7\u6c42\u4fe1\u606f\r\n\tPath   string\r\n\tMethod string\r\n\t// \u54cd\u5e94\u4fe1\u606f\r\n\tStatusCode int\r\n}\r\n\r\n// \u6bcf\u6b21\u8bf7\u6c42\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5355\u72ec\u7684context, \u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u670d\u52a1\r\n```\r\n\r\n## day3\r\n\r\n- \u603b\u4ee3\u7801\u91cf: \u7ea6`290\u884c` \u65b0\u589e\u4ee3\u7801: \u7ea6`150\u884c`\r\n- \u4e3b\u8981\u5185\u5bb9\r\n    - \u6dfb\u52a0\u52a8\u6001\u8def\u7531, \u4f7f\u7528`\u5b57\u5178\u6811`\r\n    - \u652f\u6301 `:name`\u4e0e`*filepath`\u4e24\u79cd\u6a21\u5f0f\r\n- \u6709\u70b9\u5fd8\u4e86\u5b57\u5178\u6811\u662f\u5565\u4e86, \u5199\u4e4b\u524d\u8fd8\u56de\u987e\u4e86\u4e00\u4e0b\u57fa\u7840\u8bfe\u5b57\u5178\u6811 : )\r\n\r\n **\u5b57\u5178\u6811\u64cd\u4f5c** \r\n \r\n- \u63d2\u5165: \u5bf9\u5e94\u521b\u5efa\u8def\u7531\u65f6, \u628a\u8def\u7531\u63d2\u5165\u5b57\u5178\u6811\u4e2d\r\n- \u67e5\u8be2: \u5f53\u8bf7\u6c42\u6765\u4e34\u65f6, \u53bb\u5b57\u5178\u6811\u627e\u5230\u5bf9\u5e94\u7684\u8def\u7531\r\n\r\n**\u6846\u67b6\u57fa\u672c\u7ed3\u6784**\r\n```go\r\n// \u6587\u4ef6\u7ed3\u6784\r\n.\r\n\u251c\u2500\u2500 fgee\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 context.go\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 fgee.go\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 go.mod\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 router.go\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 router_test.go\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tire.go\r\n\u251c\u2500\u2500 go.mod\r\n\u2514\u2500\u2500 main.go\r\n\r\n// context.go\r\n\r\n// Context \u4e0a\u4e0b\u6587\u7ed3\u6784\r\n// \u5728ServeHTTP\u65b9\u6cd5\u4e2d\u88ab\u521b\u5efa\r\ntype Context struct {\r\n\t// \u8bf7\u6c42\u4e0e\u54cd\u5e94\r\n\tReq    *http.Request\r\n\tWriter http.ResponseWriter\r\n\t// \u8bf7\u6c42\u4fe1\u606f\r\n\tPath   string\r\n\tMethod string\r\n\t// \u8def\u7531\u5339\u914d\u540e\u7684\u53c2\u6570\r\n\tParams map[string]string\r\n\t// \u54cd\u5e94\u4fe1\u606f\r\n\tStatusCode int\r\n}\r\n```\r\n- \u5b58\u5728\u95ee\u9898: \u5b57\u5178\u6811\u5904\u7406\u4e0d\u4e25\u8c28, \u8def\u7531\u4f1a\u51b2\u7a81, \u6bd4\u5982\u521b\u5efa\u8def\u7531/:age, \u518d\u521b\u5efa\u8def\u7531/16, \u8fd9\u6837\u5c31\u4f1a\u51fa\u73b0\u51b2\u7a81\u95ee\u9898\r\n\r\n\r\n**\u6559\u7a0b\u94fe\u63a5**\r\n\r\n> [7\u5929\u7528Go\u4ece\u96f6\u5b9e\u73b0Web\u6846\u67b6Gee\u6559\u7a0b](https://geektutu.com/post/gee.html)\u3002", "top": 0, "createdAt": 1710058926, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2024-03-10", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/zhu-ti-yue.html", "labels": ["share"], "postTitle": "\u4e3b\u9898\u6708", "postUrl": "post/zhu-ti-yue.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/8", "commentNum": 0, "wordCount": 385, "description": "## \u8d77\u56e0\r\n\r\n**\u7531\u4e8e\u5404\u79cd\u539f\u56e0\u6ca1\u6709\u6267\u884c\u4e0b\u53bb, \u4e0d\u8fc7\u662f\u633a\u6709\u610f\u601d\u7684\u4e00\u6b21\u5c1d\u8bd5**\r\n\r\n> 24\u5e742\u6708\u67d0\u5929\u4eceB\u7ad9\u4e0a\u770b\u5230[\u8fd9\u4e2a\u89c6\u9891](https://www.bilibili.com/video/BV1zz421X7KD/?spm_id_from=333.337.search-card.all.click)\u540e\u89c9\u5f97\u5f88\u6709\u610f\u601d\uff0c \u7136\u540e\u5c31\u5217\u4e86\u4e00\u4e9b\u4e3b\u9898\u5f00\u59cb\u505a\u4e86\u8d77\u6765\u3002", "top": 0, "createdAt": 1710064052, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2024-03-10", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/duo-yu-yan-huan-jing-da-jian.html", "labels": ["done", "share"], "postTitle": "\u591a\u8bed\u8a00\u73af\u5883\u642d\u5efa", "postUrl": "post/duo-yu-yan-huan-jing-da-jian.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/9", "commentNum": 0, "wordCount": 1437, "description": "# \u591a\u8bed\u8a00\u73af\u5883\u642d\u5efa\r\n\r\n> \r\n\u4e3a\u4e86\u65b9\u4fbf\u591a\u8bed\u8a00\u73af\u5883\u642d\u5efa\u7f16\u5199\u7684\u811a\u672c : )\r\n\r\n[GitHub](https://github.com/fluent12138/mutil_lang_env)  \r\n\r\n\r\n### \u76ee\u5f55\u7ed3\u6784\r\n\r\n```\r\n.\r\n|-- README.md\r\n|-- docker-compose.yaml\r\n|-- gen_yaml.py\r\n```\r\n\r\n### \u4f7f\u7528\u8bf4\u660e\r\n\r\n1. \u786e\u4fdd\u60a8\u7684\u7cfb\u7edf\u4e2d\u5df2\u5b89\u88c5 Docker \u548c Docker Compose\u3002", "top": 0, "createdAt": 1716093105, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2024-05-19", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/duo-yu-yan-huan-jing-da-jian-gong-ju-fen-xiang.html", "labels": ["share"], "postTitle": "\u591a\u8bed\u8a00\u73af\u5883\u642d\u5efa\u5de5\u5177\u5206\u4eab", "postUrl": "post/duo-yu-yan-huan-jing-da-jian-gong-ju-fen-xiang.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/10", "commentNum": 0, "wordCount": 506, "description": "# \u591a\u8bed\u8a00\u73af\u5883\u642d\u5efa\u5de5\u5177\u5206\u4eab\r\n\r\n## \u573a\u666f\r\n> \u4ece\u4e0a\u5927\u5b66\u5f00\u59cb, \u7535\u8111\u4e0a\u5c31\u914d\u7f6e\u4e86\u5404\u79cd\u5404\u6837\u7684\u73af\u5883, \u975e\u5e38\u7684\u6df7\u4e71, \u4e5f\u4e0d\u77e5\u9053\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\u4f5c\u7528\u662f\u4ec0\u4e48, \u5f88\u96be\u53d7, \u4e8e\u662f\u5728\u67d0\u5929\u665a\u4e0a\u51b3\u5b9a\u597d\u597d\u7684\u914d\u7f6e\u4e00\u756a\u6211\u7684\u7535\u8111, \u5220\u9664\u5404\u79cd\u8bed\u8a00\u5305, \u4ec0\u4e48java, erlang, python\u7b49\u7b49\u7b49, \u7136\u540e\u5f00\u59cb\u901a\u8fc7\u4e0b\u9762\u8fd9\u4e2a\u5de5\u5177\u91cd\u65b0\u5b89\u88c5\r\n\r\n## \u5de5\u5177\u662f\u4ec0\u4e48\r\n\r\n- VMR: VMR \u662f\u4e00\u6b3e\u7b80\u5355\uff0c\u8de8\u5e73\u53f0\uff0c\u4e14\u7ecf\u8fc7\u826f\u597d\u8bbe\u8ba1\u7684\u7248\u672c\u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u7ba1\u7406\u591a\u79cd SDK \u4ee5\u53ca\u5176\u4ed6\u5de5\u5177\u3002", "top": 0, "createdAt": 1719926290, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2024-07-02", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/zhou-ji- 7.1~7.7.html", "labels": ["share", "weekly"], "postTitle": "\u5468\u8bb0 7.1~7.7", "postUrl": "post/zhou-ji-%207.1~7.7.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/11", "commentNum": 0, "wordCount": 625, "description": "## \u5de5\u4f5c\r\n\r\n**\u4e00\u5207\u987a\u5229~**\r\n\r\n## \u751f\u6d3b\r\n- \u5468\u516d\r\n    - \u65e9\u6668\u518d\u6b21\u8ddf\u7ec3[\u640f\u51fb\u8bfe](https://www.bilibili.com/video/BV1MH4y1P7aa/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click), \u5f88\u723d, \u5e0c\u671b\u5927\u5bb6\u90fd\u662f\u5065\u5eb7\u7684\u5feb\u4e50\u7684!\r\n    - \u665a\u4e0a\u770b\u5230acwing\u5468\u8d5b\u53c8\u5f00\u4e86, \u53bb\u6253\u4e86\u4e00\u573a, dp\u8fd8\u662f\u65e5\u5e38\u5199\u4e0d\u51fa\u6765hh, \u4e0d\u8fc7\u770b\u65e5\u671f\u5468\u8d5b\u5df2\u7ecf\u53d8\u6210\u4e86\u6708\u8d5b\u4e86\r\n- \u5468\u65e5\r\n    - \u770b\u4e86\u770b\u6628\u665ates\u6bd4\u8d5b\u56de\u653e, \u725b\u7684! \u5e0c\u671b\u80fd\u62ff\u4e2a\u51a0\u519b\u597d\u5427!\r\n    - \u770b\u5230\u4e86leetcode\u5468\u8d5b\u5f00\u4e86, \u987a\u4fbf\u4e5f\u53bb\u7ec3\u4e86\u7ec3\u624b, \u4e09\u9898\u8fd8\u884c\r\n        - \u627e\u51fa\u52a0\u5bc6\u540e\u7684\u5b57\u7b26\u4e32: \u5b57\u7b26\u4e32\u66ff\u6362, \u5bf9\u4e8e\u5750\u6807\u53d6\u4e2a\u6a21\u5c31\u884c, \u7b7e\u5230\u9898\r\n        - \u751f\u6210\u4e0d\u542b\u76f8\u90bb\u96f6\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32: \u9700\u8981\u751f\u6210\u76f8\u90bb\u4e24\u4e2a\u6570\u5fc5\u987b\u6709\u4e00\u4e2a1\u7684 01\u4e32, dfs\u586b\u6570\u5b57, \u5982\u679c\u524d\u4e00\u4f4d\u662f0\u90a3\u4e48\u5f53\u524d\u4f4d\u5fc5\u7136\u662f1, \u524d\u4e00\u4f4d\u662f1\u5219\u5f53\u524d\u4f4d\u5b58\u572801\u4e24\u79cd\u60c5\u51b5, \u7ee7\u7eed\u5f80\u4e0b\u641c\u7d22\r\n        -  \u7edf\u8ba1 X \u548c Y \u9891\u6570\u76f8\u7b49\u7684\u5b50\u77e9\u9635\u6570\u91cf: \u7528\u7684\u4e8c\u7ef4\u524d\u7f00\u548c, \u7ed9X,Y, .\u4e09\u4e2a\u5b57\u7b26\u5206\u522b\u8d4b\u4e00\u4e2a\u6570\u5b57, \u904d\u5386\u6c42\u524d\u7f00\u548c, \u4e4b\u540e\u7279\u6b8a\u5224\u65adX+Y\u7684\u60c5\u51b5, \u9700\u8981\u7528longlong\u907f\u514d\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\r\n- \u5468\u4e94\r\n    -  \u90e8\u95e8\u805a\u9910, \u5927\u751f\u869d\u597d\u5403, \u5176\u4ed6\u83dc\u5473\u9053\u4e5f\u8fd8\u4e0d\u9519\r\n\r\n\r\n\u3002", "top": 0, "createdAt": 1720325068, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2024-07-07", "dateLabelColor": "#bc4c00"}}, "singeListJson": {"P2": {"htmlDir": "docs/about.html", "labels": ["about"], "postTitle": "\u5173\u4e8e", "postUrl": "about.html", "postSourceUrl": "https://github.com/fluent12138/fluent12138.github.io/issues/2", "commentNum": 0, "wordCount": 97, "description": "## \u4e00\u4e2a\u6b63\u5728\u52aa\u529b\u751f\u6d3b\u7684\u4eba\r\n\r\n- \u6b63\u5728\u7528\u7684\u5403\u996d\u7684\u5bb6\u4f19\r\n    - Erlang\r\n- \u4ee5\u540e\u53ef\u80fd\u4f1a\u8ba9\u6211\u5403\u4e0a\u996d\u7684\u5bb6\u4f19\r\n    - Go\u3001Java\r\n    \r\n**\u5e0c\u671b\u5927\u5bb6\u90fd\u80fd\u597d\u597d\u5403\u996d\uff01**\u3002", "top": 0, "createdAt": 1710058738, "style": "", "script": "", "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "createdDate": "2024-03-10", "dateLabelColor": "#bc4c00"}}, "labelColorDict": {"about": "#37508E", "bug": "#d73a4a", "documentation": "#0075ca", "doing": "#C2DFE4", "done": "#334200", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "link": "#DFE331", "question": "#d876e3", "share": "#A0119D", "todo": "#bfd4f2", "wontfix": "#ffffff", "\u6d4b\u8bd5": "#055DC8"}, "ogImage": "https://cdn.acwing.com/media/article/image/2023/05/28/36510_044ec922fc-3.png", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "prevUrl": "disabled", "nextUrl": "disabled"}